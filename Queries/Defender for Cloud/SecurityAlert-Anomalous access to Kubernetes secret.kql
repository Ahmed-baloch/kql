SecurityAlert
| where AlertName has "Anomalous access to Kubernetes secret" and ProviderName != "ASI Scheduled Alerts"
| extend ExtendedProperties = todynamic(ExtendedProperties)
| extend
    UserName = tostring(ExtendedProperties["UserName"]),
    UserAgent = tostring(ExtendedProperties["UserAgent"]),
    Namespace = tostring(ExtendedProperties["Namespace"]),
    RequestVerb = tostring(ExtendedProperties["RequestVerb"]),
    SecretName = tostring(ExtendedProperties["SecretName"]),
    RequestURI = tostring(ExtendedProperties["RequestURI"]),
    ResourceType = tostring(ExtendedProperties["resourceType"])
| summarize
    TimeGenerated = min(TimeGenerated),
    StartTime = min(StartTime),
    EndTime = max(EndTime),
    UserAgents = make_set(UserAgent, 250),
    SecretNames = make_set(SecretName, 250),
    RequestURIs = make_set(RequestURI, 250),
    AlertLinks = make_list(AlertLink, 250),
    Entities = make_set(todynamic(Entities)),
    take_any(RemediationSteps)
    by AlertName, AlertSeverity, Description, ResourceId, Namespace, UserName, RequestVerb, ResourceType, Tactics
| mv-apply Entities on (
    extend
        EntityValue = tostring(Entities[tostring(bag_keys(Entities)[1])]),
        EntityType = tostring(Entities["Type"])
    | where isnotempty(EntityType)
    | summarize take_any(Entities) by EntityValue, EntityType
    | sort by EntityType desc
    | summarize Entities = make_list(Entities)
    )
| mv-apply with_itemindex = Index_aux Entities on (
    extend Entities = bag_merge(bag_pack(@"$id", tostring(Index_aux + 2)), bag_remove_keys(Entities, dynamic(["$id", "Namespace"])))
    | summarize Entities = tostring(array_sort_asc(make_list(Entities)))
    )
| project
    TimeGenerated,
    AlertName,
    AlertSeverity,
    Description,
    RemediationSteps,
    ResourceId,
    ResourceType,
    StartTime,
    EndTime,
    UserName,
    UserAgents,
    Namespace,
    RequestVerb,
    SecretNames,
    RequestURIs,
    AlertLinks,
    Tactics,
    Entities
